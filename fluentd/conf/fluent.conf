<source>
  @type forward
  port 24224
  bind 0.0.0.0
</source>

<source>
  @type tail
  path /var/log/nginx/access.log
  pos_file /fluentd/pos/nginx-access.pos
  tag nginx.access
  <parse>
    @type nginx
  </parse>
  read_from_head true
  @log_level debug
  path_key path
  read_lines_limit 100
  refresh_interval 5
  skip_refresh_on_startup false
  enable_watch_timer true
  enable_stat_watcher true
  open_on_every_update true
  emit_unmatched_lines false
</source>

# <source>
#   @type tail
#   path /var/log/nginx/error.log
#   pos_file /fluentd/pos/nginx-error.pos
#   tag nginx.error
#   <parse>
#     @type regexp
#     expression /^(?<time>\d{4}/\d{2}/\d{2} \d{2}:\d{2}:\d{2}) \[(?<log_level>\w+)\] (?<pid>\d+).(?<tid>\d+): (?<message>.*)$/
#     time_format %Y/%m/%d %H:%M:%S
#   </parse>
# </source>

<filter nginx.access>
    @type record_transformer
    <record>
        remote        ${remote}
        method        ${method}
        path          ${path}
        code          ${code}
        size          ${size}
        agent         ${agent}
        timestamp     ${time}
    </record>
</filter>

# <filter nginx.access>
#   @type record_transformer
#   <record>
#     log_type access
#     component nginx
#     severity ${record["status"] >= 500 ? "error" : (record["status"] >= 400 ? "warning" : "info")}
#   </record>
# </filter>

# <filter nginx.error>
#   @type record_transformer
#   <record>
#     log_type error
#     component nginx
#     severity ${record["log_level"] == "error" ? "error" : (record["log_level"] == "warn" ? "warning" : "info")}
#   </record>
# </filter>

<filter nginx.docker>
  @type record_transformer
  <record>
    component nginx
    source docker
  </record>
</filter>

<match **>
  @type opensearch
  host opensearch
  port 9200
  logstash_format true
  logstash_prefix fluentd
  include_tag_key true
  tag_key @log_name
  flush_interval 5s
</match> 
